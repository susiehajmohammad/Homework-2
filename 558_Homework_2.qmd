---
title: "Programming in Base R"
format: pdf
editor: visual
---

## Task 1: Basic Vector Practice

### Question 1

```{r}

# pre vector 
pre <- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)
  
  
# post vector
post<- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)
```

### Question 2

```{r}

names <- paste("Subject", 1:20, sep = "_")

names(pre) <- names
pre
names(post) <- names
post
```

### Question 3

```{r}

diff_op <- (pre - post)

diff_op


```

### Question 4

```{r}


mean_bp_dec <- mean(diff_op)
mean_bp_dec


```

### Question 5

```{r}

pos_change <- which(diff_op >0)
pos_change



```

### Question 6

```{r}

diff_op1 <- diff_op[diff_op >0]
diff_op1



```

### Question 7

```{r}

mean_pos_change <- mean(diff_op1)
mean_pos_change



```

## Task 2: Basic data Frame Practice

### Question 1

```{r}

bp_data <- data.frame(patient = names, pre_bp = pre, post_bp = post, diff_bp = diff_op)

```

### Question 2

```{r}
bp_data[bp_data$diff_bp<0, ]
```

### Question 3

```{r}


bp_data$post_less120 <- bp_data$post_bp<120
bp_data

```

### Question 4

```{r}

knitr::kable(bp_data)

```

## Task 3: List Practice

### Question 1

```{r}

subject_IDs <- paste("Subject", 1:10, sep = "_")
pre_placebo <- c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)
post_placebo <- c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)
diff <- pre_placebo - post_placebo

bp_df_placebo <- data.frame(subject_ID = subject_IDs, pre = pre_placebo, post = post_placebo, diff = diff)
bp_df_placebo

bp_df_placebo$post_below_120 <- bp_df_placebo$post<120


```

### Question 2

```{r}

bp_list <- list(treatment = bp_data, placebo = bp_df_placebo)

```

### Question 3

```{r}
#Access trt using 3 ways
#1
bp_list[[1]]
#2
bp_list$treatment
#3
bp_list[["treatment"]]

```

### Question 4

```{r}

bp_list$placebo$pre

```

## Task 4: Control Flow Practice

### Question 1

```{r}

bp_list$treatment$status <- character(20)
bp_list$placebo$status <- character(10)

```

### Question 2

```{r}

for (i in 1:20) { bp<- bp_list$treatment$post_bp[i]

if (bp <= 120) {
  bp_list$treatment$status[i] <- "optimal"
} else if (bp <= 130) {
  bp_list$treatment$status[i] <- "borderline"

} else { bp_list$treatment$status[i] <- "high"}
  
  
}


```

### Question 3

```{r}

for (i in 1:10) { bp<- bp_list$placebo$post[i]

if (bp <= 120) {
  bp_list$placebo$status[i] <- "optimal"
} else if (bp <= 130) {
  bp_list$placebo$status[i] <- "borderline"

} else { bp_list$placebo$status[i] <- "high"}
  
  
}


```

## Task 5: Function Writing

### Question 1

```{r}

bp_function <- function( bp_list, stat ="mean"){
#the function gets a statistic, mean by default
my_fun <- get(stat)

#make a vector of all the stats it should get for each column we want in each df
stats<- c(my_fun(bp_list$treatment$pre_bp),
my_fun(bp_list$treatment$post_bp),
my_fun(bp_list$treatment$diff_bp),
my_fun(bp_list$placebo$pre),
my_fun(bp_list$placebo$post),
my_fun(bp_list$placebo$post_below_120))


}

#mean, var, sd, min and max
bp_function(bp_list)
bp_function(bp_list, "var")
bp_function(bp_list, "sd")
bp_function(bp_list, "min")
bp_function(bp_list, "max")



```
